/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view.manage;

import com.biz.MenuBiz;
import com.biz.MenuBizImpl;
import com.biz.OrderDishesBiz;
import com.biz.OrderDishesBizImpl;
import com.po.Menu;
import com.po.OrderDishes;
import com.util.StringUtil;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class PurchaseManageFrame extends javax.swing.JInternalFrame {

    MenuBiz mbiz = new MenuBizImpl();
    OrderDishesBiz odbiz = new OrderDishesBizImpl();

    /**
     * Creates new form PurchaseManageFrame
     */
    public PurchaseManageFrame() {
        initComponents();
        initPurchase();
    }

    private void initPurchase() {
        //模拟从数据库中获取Title并填充到组合框
        String[] sex = {"采购数量", "退货数量"};
        for (String s : sex) {
            this.cobNumber.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        btnSearch = new javax.swing.JButton();
        txtCondition = new javax.swing.JTextField();
        txtStorage = new javax.swing.JTextField();
        lblMenuID = new javax.swing.JLabel();
        txtMenuid = new javax.swing.JTextField();
        lblMenuname = new javax.swing.JLabel();
        txtMenuname = new javax.swing.JTextField();
        txtNumber = new javax.swing.JTextField();
        btnComfirm = new javax.swing.JButton();
        cobNumber = new javax.swing.JComboBox();
        lblMstorage = new javax.swing.JLabel();
        lblNumber = new javax.swing.JLabel();
        lblNotice = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setClosable(true);

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "菜品ID", "菜品名称", "种类", "价格", "已售份额", "库存量", "昨日销售量"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblMenuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblMenu);
        if (tblMenu.getColumnModel().getColumnCount() > 0) {
            tblMenu.getColumnModel().getColumn(0).setResizable(false);
            tblMenu.getColumnModel().getColumn(1).setResizable(false);
            tblMenu.getColumnModel().getColumn(2).setResizable(false);
            tblMenu.getColumnModel().getColumn(3).setResizable(false);
            tblMenu.getColumnModel().getColumn(4).setResizable(false);
            tblMenu.getColumnModel().getColumn(6).setResizable(false);
        }

        btnSearch.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Search");
        btnSearch.setToolTipText("模糊查询：员工姓名");
        btnSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(204, 51, 255), new java.awt.Color(204, 102, 255)));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        txtCondition.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConditionActionPerformed(evt);
            }
        });
        txtCondition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConditionKeyPressed(evt);
            }
        });

        txtStorage.setEditable(false);
        txtStorage.setText(" ");

        lblMenuID.setFont(new java.awt.Font("方正兰亭超细黑简体", 1, 18)); // NOI18N
        lblMenuID.setForeground(new java.awt.Color(102, 102, 102));
        lblMenuID.setText("菜品编号");
        lblMenuID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtMenuid.setEditable(false);
        txtMenuid.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtMenuid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMenuidActionPerformed(evt);
            }
        });

        lblMenuname.setFont(new java.awt.Font("方正兰亭超细黑简体", 1, 18)); // NOI18N
        lblMenuname.setForeground(new java.awt.Color(255, 51, 51));
        lblMenuname.setText("菜品名称");
        lblMenuname.setToolTipText("员工姓名须由2-4个中文组成");
        lblMenuname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtMenuname.setEditable(false);
        txtMenuname.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtMenuname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMenunameKeyPressed(evt);
            }
        });

        btnComfirm.setText("确认");
        btnComfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComfirmActionPerformed(evt);
            }
        });

        cobNumber.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cobNumber.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        cobNumber.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cobNumberItemStateChanged(evt);
            }
        });

        lblMstorage.setFont(new java.awt.Font("方正兰亭超细黑简体", 1, 18)); // NOI18N
        lblMstorage.setForeground(new java.awt.Color(102, 102, 102));
        lblMstorage.setText("库存数量");
        lblMstorage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        lblNumber.setFont(new java.awt.Font("方正兰亭超细黑简体", 1, 18)); // NOI18N
        lblNumber.setForeground(new java.awt.Color(255, 51, 51));
        lblNumber.setText("修改数量");
        lblNumber.setToolTipText("员工姓名须由2-4个中文组成");
        lblNumber.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        lblNotice.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        lblNotice.setForeground(new java.awt.Color(255, 51, 51));
        lblNotice.setText("注意：红色字体项目为必填！");

        btnExit.setText("退出");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(244, 244, 244))
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 722, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(56, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(txtMenuid, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblMenuID)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblMstorage)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtStorage, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMenuname)
                            .addComponent(lblNumber))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(cobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnComfirm)
                                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addComponent(btnExit))
                            .addComponent(txtMenuname, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))))
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(lblNotice)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMenuID)
                    .addComponent(txtMenuid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMenuname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMenuname))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStorage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cobNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMstorage)
                    .addComponent(lblNumber))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNotice)
                    .addComponent(btnComfirm)
                    .addComponent(btnExit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblMenuMouseClicked
        //鼠标选中某行，该行信息显示到输入面板
        int row = this.tblMenu.getSelectedRow();
        //根据row获取每列的值
        this.txtMenuid.setText(this.tblMenu.getValueAt(row, 0) + "");
        this.txtMenuname.setText(this.tblMenu.getValueAt(row, 1) + "");
        this.txtStorage.setText(this.tblMenu.getValueAt(row, 5) + "");


    }//GEN-LAST:event_tblMenuMouseClicked

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //模糊查询
        String condition = this.txtCondition.getText().trim();
        List<Menu> list = mbiz.findByCondition(condition);
        showOnTable(list);

    }//GEN-LAST:event_btnSearchActionPerformed

    private void txtConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConditionActionPerformed

    private void txtConditionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConditionKeyPressed
        this.getRootPane().setDefaultButton(btnSearch);
    }//GEN-LAST:event_txtConditionKeyPressed

    private void txtMenuidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMenuidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMenuidActionPerformed

    private void txtMenunameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMenunameKeyPressed

    }//GEN-LAST:event_txtMenunameKeyPressed

    private void cobNumberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cobNumberItemStateChanged

    }//GEN-LAST:event_cobNumberItemStateChanged

    private void btnComfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComfirmActionPerformed

        //菜品编号非空验证
        if (StringUtil.checkLength(this.txtMenuid.getText()) == false) {
            JOptionPane.showMessageDialog(this, "请在表格中进行选择");
            return;
        }
        //菜品名称非空验证
        if (StringUtil.checkLength(this.txtMenuname.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "菜品名称不能为空");
            return;
        }
        
        Integer mid = Integer.parseInt(this.txtMenuid.getText());
        Integer mstorage = Integer.parseInt(this.txtStorage.getText());
        String content = this.cobNumber.getSelectedItem().toString().trim();
        //下拉框非空验证
        if (StringUtil.checkLength(content) == false) {
            JOptionPane.showMessageDialog(this, "请选择需要采购或是退货");
            return;
        }

        if (content.equals("采购数量")) {
            String number = this.txtNumber.getText().trim();
            if (StringUtil.checkLength(number) == false) {
                JOptionPane.showMessageDialog(this, "采购数量不能为空");
                return;
            }
            if (StringUtil.checkDigit(number) == false) {
                JOptionPane.showMessageDialog(this, "采购数量只能为数字");
                return;
            }
            int number_int = Integer.parseInt(number);
            boolean result = mbiz.addMstorage(mid, number_int);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "采购成功");
                //刷新表格
                List<Menu> list = mbiz.findAll();
                //显示list信息
                showOnTable(list);
            } else {
                JOptionPane.showMessageDialog(this, "采购失败");
            }
        } else if (content.equals("退货数量")) {
            String number = this.txtNumber.getText().trim();
            if (StringUtil.checkLength(number) == false) {
                JOptionPane.showMessageDialog(this, "退货数量不能为空");
                return;
            }
            if (StringUtil.checkDigit(number) == false) {
                JOptionPane.showMessageDialog(this, "退货数量只能为数字");
                return;
            }

            int number_int = Integer.parseInt(number);
            if (mstorage < number_int) {
                JOptionPane.showMessageDialog(this, "退货数量不能大于库存数量");
                return;
            }
            boolean result = mbiz.reduceMstorage(mid, number_int);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "退货成功");
                //刷新表格
                List<Menu> list = mbiz.findAll();
                //显示list信息
                showOnTable(list);
            } else {
                JOptionPane.showMessageDialog(this, "退货失败");
            }
        }
        clearInput();

    }//GEN-LAST:event_btnComfirmActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int answer = JOptionPane.showConfirmDialog(this, "您确定要关闭吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //界面恢复到最初状态
            this.txtCondition.setText("");
            clearInput();
            //获取表格模型,清空表格信息
            DefaultTableModel dtm = (DefaultTableModel) this.tblMenu.getModel();
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            //关闭
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    public void showOnTable(List<Menu> list) {
        //1.获取表格模型
        DefaultTableModel dtm = (DefaultTableModel) this.tblMenu.getModel();
        //2.清空表格信息
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        //3.显示数据
        for (Menu m : list) {
            Vector vt = new Vector();
            vt.add(m.getMid());
            vt.add(m.getMname());
            vt.add(m.getMtype());
            vt.add(m.getMprice());
            vt.add(m.getMcount());
            vt.add(m.getMstorage());

            Date today = new Date();
            Date yesterday = new Date(today.getTime() - 86400000L);//86400000L，它的意思是说1天的时间=24小时 x 60分钟 x 60秒 x 1000毫秒 单位是L。
            DateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            String yesterdayTime = format.format(yesterday);
            List<OrderDishes> odlist = odbiz.findYesterdayByMid(yesterdayTime, m.getMid());
            int yesterdayStorage = 0;
            for (OrderDishes od : odlist) {
                yesterdayStorage += od.getOdcount();
            }

            vt.add(yesterdayStorage);
            dtm.addRow(vt);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComfirm;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cobNumber;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblMenuID;
    private javax.swing.JLabel lblMenuname;
    private javax.swing.JLabel lblMstorage;
    private javax.swing.JLabel lblNotice;
    private javax.swing.JLabel lblNumber;
    private javax.swing.JTable tblMenu;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtMenuid;
    private javax.swing.JTextField txtMenuname;
    private javax.swing.JTextField txtNumber;
    private javax.swing.JTextField txtStorage;
    // End of variables declaration//GEN-END:variables

    private void clearInput() {
        this.txtMenuid.setText("");
        this.txtMenuname.setText("");
        this.txtStorage.setText("");
        this.txtNumber.setText("");
        this.cobNumber.setSelectedIndex(0);
        tblMenu.clearSelection();
    }

}
