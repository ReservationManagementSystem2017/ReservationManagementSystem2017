/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view.manage;

import com.biz.EmployeeBiz;
import com.biz.EmployeeBizImpl;
import com.po.Employee;
import com.util.StringUtil;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class EmployeeManageFrame extends javax.swing.JInternalFrame {

    EmployeeBiz ebiz = new EmployeeBizImpl();

    /**
     * Creates new form EmployeeManageFrame
     */
    public EmployeeManageFrame() {
        initComponents();
        this.tblEmployee.getTableHeader().setReorderingAllowed(false);//表头不可移动
        this.tblEmployee.getTableHeader().setResizingAllowed(false);//列大小不可改变
        this.btnSave.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnCancel.setEnabled(false);
        //初始化Title
        initEmpSex();
        //初始化Type
        initEmpType();
    }

    private void initEmpSex() {
        //模拟从数据库中获取Title并填充到组合框
        String[] sex = {"男", "女"};
        for (String s : sex) {
            this.cobEmpsex.addItem(s);
        }

    }

    private void initEmpType() {
        //工作性质
        //服务员，厨师，采购员
        String[] type = {"服务员", "厨师", "采购员"};
        for (String s : type) {
            this.cobEmptitle.addItem(s);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEmployee = new javax.swing.JTable();
        lblEmpid = new javax.swing.JPanel();
        lblEmpID = new javax.swing.JLabel();
        txtEmpid = new javax.swing.JTextField();
        lblEmpname = new javax.swing.JLabel();
        txtEmpname = new javax.swing.JTextField();
        lblEmpage = new javax.swing.JLabel();
        txtage = new javax.swing.JTextField();
        lblEmpsex = new javax.swing.JLabel();
        cobEmpsex = new javax.swing.JComboBox();
        lblEmpwage = new javax.swing.JLabel();
        txtEmpwage = new javax.swing.JTextField();
        lblEmptel = new javax.swing.JLabel();
        txtEmptel = new javax.swing.JTextField();
        lblEmptype = new javax.swing.JLabel();
        cobEmptitle = new javax.swing.JComboBox();
        lblNotice = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        txtCondition = new javax.swing.JTextField();

        setClosable(true);

        btnSearch.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(51, 51, 51));
        btnSearch.setText("Search");
        btnSearch.setToolTipText("模糊查询：员工姓名");
        btnSearch.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(204, 51, 255), new java.awt.Color(204, 102, 255)));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblEmployee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "员工编号", "员工姓名", "性别", "年龄", "工资", "联系方式", "身份"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblEmployee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmployeeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblEmployee);
        if (tblEmployee.getColumnModel().getColumnCount() > 0) {
            tblEmployee.getColumnModel().getColumn(0).setResizable(false);
            tblEmployee.getColumnModel().getColumn(1).setResizable(false);
            tblEmployee.getColumnModel().getColumn(2).setResizable(false);
            tblEmployee.getColumnModel().getColumn(3).setResizable(false);
            tblEmployee.getColumnModel().getColumn(4).setResizable(false);
            tblEmployee.getColumnModel().getColumn(5).setResizable(false);
            tblEmployee.getColumnModel().getColumn(6).setResizable(false);
        }

        lblEmpID.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        lblEmpID.setForeground(new java.awt.Color(204, 0, 0));
        lblEmpID.setText("员工编号");
        lblEmpID.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtEmpid.setEditable(false);
        txtEmpid.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtEmpid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmpidActionPerformed(evt);
            }
        });

        lblEmpname.setFont(new java.awt.Font("微软雅黑 Light", 1, 14)); // NOI18N
        lblEmpname.setForeground(new java.awt.Color(204, 0, 51));
        lblEmpname.setText("员工姓名");
        lblEmpname.setToolTipText("员工姓名须由2-4个中文组成");
        lblEmpname.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtEmpname.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtEmpname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmpnameKeyPressed(evt);
            }
        });

        lblEmpage.setFont(new java.awt.Font("微软雅黑 Light", 1, 14)); // NOI18N
        lblEmpage.setText("年龄");
        lblEmpage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtage.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtageActionPerformed(evt);
            }
        });
        txtage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtageKeyPressed(evt);
            }
        });

        lblEmpsex.setFont(new java.awt.Font("微软雅黑 Light", 1, 14)); // NOI18N
        lblEmpsex.setForeground(new java.awt.Color(204, 0, 51));
        lblEmpsex.setText("性别");
        lblEmpsex.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        cobEmpsex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cobEmpsex.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        cobEmpsex.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cobEmpsexItemStateChanged(evt);
            }
        });

        lblEmpwage.setFont(new java.awt.Font("宋体", 1, 14)); // NOI18N
        lblEmpwage.setText("工资");
        lblEmpwage.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtEmpwage.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));

        lblEmptel.setFont(new java.awt.Font("微软雅黑 Light", 1, 14)); // NOI18N
        lblEmptel.setForeground(new java.awt.Color(204, 0, 51));
        lblEmptel.setText("联系方式");
        lblEmptel.setToolTipText("手机号须由11位数字组成");
        lblEmptel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        txtEmptel.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtEmptel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmptelKeyPressed(evt);
            }
        });

        lblEmptype.setFont(new java.awt.Font("微软雅黑 Light", 1, 14)); // NOI18N
        lblEmptype.setForeground(new java.awt.Color(204, 0, 51));
        lblEmptype.setText("身份");
        lblEmptype.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));

        cobEmptitle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));
        cobEmptitle.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        cobEmptitle.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cobEmptitleItemStateChanged(evt);
            }
        });
        cobEmptitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobEmptitleActionPerformed(evt);
            }
        });

        lblNotice.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        lblNotice.setForeground(new java.awt.Color(204, 0, 0));
        lblNotice.setText("注意：红色字体项目为必填！");

        btnLoad.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnLoad.setText("Load");
        btnLoad.setToolTipText("加载数据库内全部员工信息");
        btnLoad.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnLoad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadActionPerformed(evt);
            }
        });

        btnAdd.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.setToolTipText("增加新员工");
        btnAdd.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnSave.setText("Save");
        btnSave.setToolTipText("保存修改");
        btnSave.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.setToolTipText("删除选中员工信息");
        btnDelete.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.setToolTipText("取消选中");
        btnCancel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnExit.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        btnExit.setText("Exit");
        btnExit.setToolTipText("关闭员工管理界面");
        btnExit.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED, new java.awt.Color(102, 102, 255), new java.awt.Color(153, 153, 255), new java.awt.Color(255, 51, 255), new java.awt.Color(204, 102, 255)));
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout lblEmpidLayout = new javax.swing.GroupLayout(lblEmpid);
        lblEmpid.setLayout(lblEmpidLayout);
        lblEmpidLayout.setHorizontalGroup(
            lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblEmpidLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(lblEmpidLayout.createSequentialGroup()
                            .addComponent(lblEmpwage, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtEmpwage, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(20, 20, 20)
                            .addComponent(lblEmptel))
                        .addGroup(lblEmpidLayout.createSequentialGroup()
                            .addComponent(lblEmpID)
                            .addGap(18, 18, 18)
                            .addComponent(txtEmpid, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(lblEmpname)))
                    .addComponent(lblNotice))
                .addGap(18, 18, 18)
                .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(lblEmpidLayout.createSequentialGroup()
                        .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(lblEmpidLayout.createSequentialGroup()
                                .addComponent(lblEmptype)
                                .addGap(36, 36, 36)
                                .addComponent(cobEmptitle, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(lblEmpidLayout.createSequentialGroup()
                                .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(40, 40, 40)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(lblEmpidLayout.createSequentialGroup()
                        .addComponent(txtEmpname, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(lblEmpsex)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cobEmpsex, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblEmpage)
                        .addGap(18, 18, 18)
                        .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtEmptel, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        lblEmpidLayout.setVerticalGroup(
            lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(lblEmpidLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmpID)
                    .addComponent(txtEmpid, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmpname, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmpname)
                    .addComponent(lblEmpsex)
                    .addComponent(cobEmpsex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmpage))
                .addGap(18, 18, 18)
                .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmptel)
                    .addComponent(txtEmpwage, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmptel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmpwage)
                    .addComponent(lblEmptype)
                    .addComponent(cobEmptitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(lblEmpidLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNotice))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        txtCondition.setBorder(javax.swing.BorderFactory.createEtchedBorder(new java.awt.Color(204, 255, 255), new java.awt.Color(204, 153, 255)));
        txtCondition.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConditionActionPerformed(evt);
            }
        });
        txtCondition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConditionKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(271, 271, 271))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(lblEmpid, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCondition, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblEmpid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        //模糊查询
        String condition = this.txtCondition.getText().trim();
        List<Employee> list = ebiz.findByCondition(condition);
        showOnTable(list);
        //清空
        clearInput();
        this.btnSave.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnAdd.setEnabled(true);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void tblEmployeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmployeeMouseClicked
        //鼠标选中某行，该行信息显示到输入面板
        int row = this.tblEmployee.getSelectedRow();
        //根据row获取每列的值
        this.txtEmpid.setText(this.tblEmployee.getValueAt(row, 0) + "");
        this.txtEmpname.setText(this.tblEmployee.getValueAt(row, 1) + "");
        this.cobEmpsex.setSelectedItem(this.tblEmployee.getValueAt(row, 2) + "");
        this.txtage.setText(this.tblEmployee.getValueAt(row, 3) + "");
        this.txtEmpwage.setText(this.tblEmployee.getValueAt(row, 4) + "");
        this.txtEmptel.setText(this.tblEmployee.getValueAt(row, 5) + "");
        this.cobEmptitle.setSelectedItem(this.tblEmployee.getValueAt(row, 6) + "");

        //保存，删除,取消按钮可用，添加不可用
        this.btnSave.setEnabled(true);
        this.btnDelete.setEnabled(true);
        this.btnCancel.setEnabled(true);
        this.btnAdd.setEnabled(false);
    }//GEN-LAST:event_tblEmployeeMouseClicked

    private void txtEmpnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmpnameKeyPressed
        this.getRootPane().setDefaultButton(btnAdd);
    }//GEN-LAST:event_txtEmpnameKeyPressed

    private void txtageKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtageKeyPressed
        this.getRootPane().setDefaultButton(btnAdd);
    }//GEN-LAST:event_txtageKeyPressed

    private void cobEmpsexItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cobEmpsexItemStateChanged

    }//GEN-LAST:event_cobEmpsexItemStateChanged

    private void txtEmptelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmptelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmptelKeyPressed

    private void cobEmptitleItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cobEmptitleItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_cobEmptitleItemStateChanged

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadActionPerformed
        //先清空文本
        clearInput();
        this.txtCondition.setText("");
        //查询数据库将数据显示到表格上
        List<Employee> list = ebiz.findAll();
        //显示list信息
        showOnTable(list);
        this.btnSave.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnAdd.setEnabled(true);
    }//GEN-LAST:event_btnLoadActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        //新增商品
        //1获取员工信息
        String empname = this.txtEmpname.getText().trim();
        String empsex = this.cobEmpsex.getSelectedItem().toString().trim();
        String emptel = this.txtEmptel.getText().trim();
        String emptype = this.cobEmptitle.getSelectedItem().toString().trim();

        //员工名称非空验证，中文验证
        if (StringUtil.checkLength(empname) == false) {
            JOptionPane.showMessageDialog(this, "员工名称不能为空");
            return;
        }
        if (StringUtil.checkName(empname) == false) {
            JOptionPane.showMessageDialog(this, "姓名须由2-4个中文组成");
            return;
        }
        //性别非空验证
        if (StringUtil.checkLength(empsex) == false) {
            JOptionPane.showMessageDialog(this, "员工性别不能为空");
            return;
        }
        //年龄非空验证
        if (StringUtil.checkLength(this.txtage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工年龄不能为空");
            return;
        }
        //年数字验证
        if (StringUtil.checkDigit(this.txtage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工年龄只能为数字");
            return;
        }
        //工资非空验证
        if (StringUtil.checkLength(this.txtEmpwage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工工资不能为空");
            return;
        }
        //工资数字验证
        if (StringUtil.checkDecimal(this.txtEmpwage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工工资只能为数字");
            return;
        }
        //手机非空验证,数字验证
        if (StringUtil.checkLength(emptel) == false) {
            JOptionPane.showMessageDialog(this, "手机号不能为空");
            return;
        }
        if (StringUtil.checkTel(emptel) == false) {
            JOptionPane.showMessageDialog(this, "手机号须由11位数字组成");
            return;
        }
        //工作性质非空验证
        if (StringUtil.checkLength(emptype) == false) {
            JOptionPane.showMessageDialog(this, "工作性质不能为空");
            return;
        }

        int empage = Integer.parseInt(this.txtage.getText().trim());
        double empwage = Double.parseDouble(this.txtEmpwage.getText().trim());

        //组合对象
        Employee e = new Employee(null, empname, empsex, empage, empwage, emptel, emptype);
        //调用业务类
        boolean result = ebiz.add(e);
        if (result == true) {
            JOptionPane.showMessageDialog(this, "添加成功");
            //刷新表格
            List<Employee> list = ebiz.findAll();
            //显示list信息
            showOnTable(list);
        } else {
            JOptionPane.showMessageDialog(this, "添加失败");
        }
        //清空面板信息
        clearInput();
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        //员工编号非空验证
        if (StringUtil.checkLength(this.txtEmpid.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "请在表格中进行选择");
            return;
        }
        //修改员工
        //1获取员工信息
       
        int empid = Integer.parseInt(this.txtEmpid.getText());
        String empname = this.txtEmpname.getText().trim();
        String empsex = this.cobEmpsex.getSelectedItem().toString().trim();

        String emptel = this.txtEmptel.getText().trim();
        String emptype = this.cobEmptitle.getSelectedItem().toString().trim();

        //员工名称非空验证，中文验证
        if (StringUtil.checkLength(empname) == false) {
            JOptionPane.showMessageDialog(this, "员工名称不能为空");
            return;
        }
        if (StringUtil.checkName(empname) == false) {
            JOptionPane.showMessageDialog(this, "姓名须由2-4个中文组成");
            return;
        }
        //性别非空验证
        if (StringUtil.checkLength(empsex) == false) {
            JOptionPane.showMessageDialog(this, "员工性别不能为空");
            return;
        }
        //年龄非空验证
        if (StringUtil.checkLength(this.txtage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工年龄不能为空");
            return;
        }
        //年数字验证
        if (StringUtil.checkDigit(this.txtage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工年龄只能为数字");
            return;
        }
        //工资非空验证
        if (StringUtil.checkLength(this.txtEmpwage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工工资不能为空");
            return;
        }
        //工资数字验证
        if (StringUtil.checkDecimal(this.txtEmpwage.getText().trim()) == false) {
            JOptionPane.showMessageDialog(this, "员工工资只能为数字");
            return;
        }
        //手机非空验证,数字验证
        if (StringUtil.checkLength(emptel) == false) {
            JOptionPane.showMessageDialog(this, "手机号不能为空");
            return;
        }
        if (StringUtil.checkTel(emptel) == false) {
            JOptionPane.showMessageDialog(this, "手机号须由11位数字组成");
            return;
        }
        //工作性质非空验证
        if (StringUtil.checkLength(emptype) == false) {
            JOptionPane.showMessageDialog(this, "工作性质不能为空");
            return;
        }

        int empage = Integer.parseInt(this.txtage.getText());
        double empwage = Double.parseDouble(this.txtEmpwage.getText());
        //组合对象
        Employee e = new Employee(empid, empname, empsex, empage, empwage, emptel, emptype);
        //调用业务类
        boolean result = ebiz.update(e);
        if (result == true) {
            JOptionPane.showMessageDialog(this, "保存成功");
            //刷新表格
            List<Employee> list = ebiz.findAll();
            //显示list信息
            showOnTable(list);
        } else {
            JOptionPane.showMessageDialog(this, "保存失败");
        }
        //清空面板信息
        clearInput();
        //保存，删除,取消按钮不可用，添加可用
        this.btnSave.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnAdd.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int answer = JOptionPane.showConfirmDialog(this, "您确定要删除吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //删除商品
            int empid = Integer.parseInt(this.txtEmpid.getText());
            //调用业务
            boolean result = ebiz.delete(empid);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "删除成功");
                //刷新表格
                List<Employee> list = ebiz.findAll();
                //显示list信息
                showOnTable(list);//
            } else {
                JOptionPane.showMessageDialog(this, "删除失败");
            }
            //清空面板信息
            clearInput();
            //保存，删除,取消按钮不可用，添加可用
            this.btnSave.setEnabled(false);
            this.btnDelete.setEnabled(false);
            this.btnCancel.setEnabled(false);
            this.btnAdd.setEnabled(true);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        //界面恢复到最初状态
        clearInput();
        this.btnSave.setEnabled(false);
        this.btnDelete.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnAdd.setEnabled(true);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        int answer = JOptionPane.showConfirmDialog(this, "您确定要关闭吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //界面恢复到最初状态
            clearInput();
            this.txtCondition.setText("");
            this.btnSave.setEnabled(false);
            this.btnDelete.setEnabled(false);
            this.btnCancel.setEnabled(false);
            this.btnAdd.setEnabled(true);
            //获取表格模型,清空表格信息
            DefaultTableModel dtm = (DefaultTableModel) this.tblEmployee.getModel();
            while (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            //关闭
            this.dispose();
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void txtConditionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConditionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConditionActionPerformed

    private void txtConditionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConditionKeyPressed
        this.getRootPane().setDefaultButton(btnSearch);
    }//GEN-LAST:event_txtConditionKeyPressed

    private void cobEmptitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobEmptitleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cobEmptitleActionPerformed

    private void txtEmpidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmpidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmpidActionPerformed

    private void txtageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtageActionPerformed

    private void clearInput() {
        this.txtEmpid.setText("");
        this.txtEmpname.setText("");
        this.txtage.setText("");
        this.txtEmpwage.setText("");
        this.txtEmptel.setText("");
        this.cobEmpsex.setSelectedIndex(0);
        this.cobEmptitle.setSelectedIndex(0);
        tblEmployee.clearSelection();
    }

    public void showOnTable(List<Employee> list) {
        //1.获取表格模型
        DefaultTableModel dtm = (DefaultTableModel) this.tblEmployee.getModel();
        //2.清空表格信息
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        //3.显示数据
        for (Employee e : list) {
            Vector vt = new Vector();
            vt.add(e.getEid());
            vt.add(e.getEname());
            vt.add(e.getEsex());
            vt.add(e.getEage());
            vt.add(e.getEwage());
            vt.add(e.getEphone());
            vt.add(e.getEtype());
            dtm.addRow(vt);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cobEmpsex;
    private javax.swing.JComboBox cobEmptitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblEmpID;
    private javax.swing.JLabel lblEmpage;
    private javax.swing.JPanel lblEmpid;
    private javax.swing.JLabel lblEmpname;
    private javax.swing.JLabel lblEmpsex;
    private javax.swing.JLabel lblEmptel;
    private javax.swing.JLabel lblEmptype;
    private javax.swing.JLabel lblEmpwage;
    private javax.swing.JLabel lblNotice;
    private javax.swing.JTable tblEmployee;
    private javax.swing.JTextField txtCondition;
    private javax.swing.JTextField txtEmpid;
    private javax.swing.JTextField txtEmpname;
    private javax.swing.JTextField txtEmptel;
    private javax.swing.JTextField txtEmpwage;
    private javax.swing.JTextField txtage;
    // End of variables declaration//GEN-END:variables
}
