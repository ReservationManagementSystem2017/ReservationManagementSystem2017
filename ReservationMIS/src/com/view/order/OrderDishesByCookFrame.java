/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view.order;

import com.biz.MenuBiz;
import com.biz.MenuBizImpl;
import com.biz.OrderDishesBiz;
import com.biz.OrderDishesBizImpl;
import com.biz.UserBiz;
import com.biz.UserBizImpl;
import com.po.Order;
import com.po.OrderDishes;
import com.po.User;
import java.awt.Color;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Administrator
 */
public class OrderDishesByCookFrame extends javax.swing.JInternalFrame {

    OrderDishesBiz odbiz = new OrderDishesBizImpl();
    MenuBiz mbiz = new MenuBizImpl();
    UserBiz ubiz = new UserBizImpl();
    public User userNew = null;//设置静态值对象，供界面传值用

    /**
     * Creates new form OrderByCookFrame
     */
    public OrderDishesByCookFrame() {
        initComponents();
        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);
    }

    public OrderDishesByCookFrame(User user) {
        this.userNew = user;
        initComponents();
        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);
        this.jScrollPane1.getViewport().setBackground(Color.WHITE);
        this.jScrollPane3.getViewport().setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        homePanel1 = new com.view.HomePanel();
        lblMenu = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        lblMenu2 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblToCook = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblCooking = new javax.swing.JTable();
        btnCook = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnFinish = new javax.swing.JButton();

        setClosable(true);
        setTitle("厨师做菜");

        lblMenu.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        lblMenu.setForeground(new java.awt.Color(255, 51, 51));
        lblMenu.setText("待做菜单");

        btnSearch.setBackground(new java.awt.Color(255, 255, 102));
        btnSearch.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        btnSearch.setText("查询");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        lblMenu2.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        lblMenu2.setForeground(new java.awt.Color(255, 51, 51));
        lblMenu2.setText("正在做的菜");

        btnUpdate.setBackground(new java.awt.Color(255, 255, 102));
        btnUpdate.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        btnUpdate.setText("刷新");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblToCook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "编号", "订单编号", "菜品名称", "份数", "订单时间"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblToCook.getTableHeader().setReorderingAllowed(false);
        tblToCook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblToCookMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblToCook);
        if (tblToCook.getColumnModel().getColumnCount() > 0) {
            tblToCook.getColumnModel().getColumn(0).setResizable(false);
            tblToCook.getColumnModel().getColumn(1).setResizable(false);
            tblToCook.getColumnModel().getColumn(2).setResizable(false);
            tblToCook.getColumnModel().getColumn(3).setResizable(false);
            tblToCook.getColumnModel().getColumn(4).setResizable(false);
        }

        tblCooking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "编号", "订单编号", "菜品名称", "份数", "订单时间"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCooking.getTableHeader().setReorderingAllowed(false);
        tblCooking.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCookingMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblCooking);
        if (tblCooking.getColumnModel().getColumnCount() > 0) {
            tblCooking.getColumnModel().getColumn(0).setResizable(false);
            tblCooking.getColumnModel().getColumn(1).setResizable(false);
            tblCooking.getColumnModel().getColumn(2).setResizable(false);
            tblCooking.getColumnModel().getColumn(3).setResizable(false);
            tblCooking.getColumnModel().getColumn(4).setResizable(false);
        }

        btnCook.setBackground(new java.awt.Color(255, 255, 102));
        btnCook.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        btnCook.setText("做菜");
        btnCook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCookActionPerformed(evt);
            }
        });

        btnCancel.setBackground(new java.awt.Color(255, 255, 102));
        btnCancel.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        btnCancel.setText("取消");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnFinish.setBackground(new java.awt.Color(255, 255, 102));
        btnFinish.setFont(new java.awt.Font("华文细黑", 0, 18)); // NOI18N
        btnFinish.setText("完成");
        btnFinish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout homePanel1Layout = new javax.swing.GroupLayout(homePanel1);
        homePanel1.setLayout(homePanel1Layout);
        homePanel1Layout.setHorizontalGroup(
            homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanel1Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanel1Layout.createSequentialGroup()
                        .addComponent(lblMenu)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(69, 69, 69))
                    .addGroup(homePanel1Layout.createSequentialGroup()
                        .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCook, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 372, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)))
                .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(homePanel1Layout.createSequentialGroup()
                        .addComponent(lblMenu2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62))
                    .addGroup(homePanel1Layout.createSequentialGroup()
                        .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, homePanel1Layout.createSequentialGroup()
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(40, Short.MAX_VALUE))))
        );
        homePanel1Layout.setVerticalGroup(
            homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homePanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMenu2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 21, Short.MAX_VALUE)
                .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(homePanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFinish, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(homePanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(homePanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblToCookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblToCookMouseClicked
        this.btnCook.setEnabled(true);
    }//GEN-LAST:event_tblToCookMouseClicked

    private void btnCookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCookActionPerformed
        int row = this.tblToCook.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "请选择要做的的菜！");
            return;
        }
        int answer = JOptionPane.showConfirmDialog(this, "您确定要做吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //删除菜
            Integer odid = (Integer) this.tblToCook.getValueAt(row, 0);
            //调用业务
            boolean result = odbiz.Zuocai(odid);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "做菜成功");
                //刷新表格
            } else {
                JOptionPane.showMessageDialog(this, "做菜失败");
            }

        }
        List<OrderDishes> list = odbiz.toCookByEid(userNew.getEid());
        //显示list信息
        showOnTableToCook(list);//
        List<OrderDishes> list1 = odbiz.cookingByEid(userNew.getEid());
        //显示list信息
        showOnTableCooking(list1);//
//        DefaultTableModel dtm = (DefaultTableModel) this.tblMenu.getModel();
//        dtm.removeRow(row);
        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);
    }//GEN-LAST:event_btnCookActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        List<OrderDishes> list = odbiz.toCookByEid(userNew.getEid());
        showOnTableToCook(list);
        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnFinishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinishActionPerformed
        int row = this.tblCooking.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "请选择要完成的的菜！");
            return;
        }
        int answer = JOptionPane.showConfirmDialog(this, "您确定完成了吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //删除菜
            Integer odid = (Integer) this.tblCooking.getValueAt(row, 0);
            //调用业务
            boolean result = odbiz.Wanchengcai(odid);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "完成菜成功");
            } else {
                JOptionPane.showMessageDialog(this, "做菜失败");
            }
        }
        List<OrderDishes> list = odbiz.toCookByEid(userNew.getEid());
        //显示list信息
        showOnTableToCook(list);//
        List<OrderDishes> list1 = odbiz.cookingByEid(userNew.getEid());
        //显示list信息
        showOnTableCooking(list1);//

        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);

    }//GEN-LAST:event_btnFinishActionPerformed

    private void tblCookingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCookingMouseClicked
        this.btnFinish.setEnabled(true);
        this.btnCancel.setEnabled(true);
    }//GEN-LAST:event_tblCookingMouseClicked

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        List<OrderDishes> list = odbiz.cookingByEid(userNew.getEid());
        showOnTableCooking(list);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        int row = this.tblCooking.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "请选择要取消的的菜！");
            return;
        }
        int answer = JOptionPane.showConfirmDialog(this, "您确定完成了吗？");
        if (answer == JOptionPane.YES_OPTION) {
            //删除菜
            Integer odid = (Integer) this.tblCooking.getValueAt(row, 0);
            //调用业务
            boolean result = odbiz.Quxiaocai(odid);
            if (result == true) {
                JOptionPane.showMessageDialog(this, "取消做菜成功");
            } else {
                JOptionPane.showMessageDialog(this, "取消做菜失败");
            }
        }
        List<OrderDishes> list = odbiz.toCookByEid(userNew.getEid());
        //显示list信息
        showOnTableToCook(list);//
        List<OrderDishes> list1 = odbiz.cookingByEid(userNew.getEid());
        //显示list信息
        showOnTableCooking(list1);//
        this.btnCook.setEnabled(false);
        this.btnCancel.setEnabled(false);
        this.btnFinish.setEnabled(false);

    }//GEN-LAST:event_btnCancelActionPerformed

    private void showOnTableToCook(List<OrderDishes> list) {
        //1.获取指定表格（tblMenu）模型
        DefaultTableModel dtm = (DefaultTableModel) this.tblToCook.getModel();
        while (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        //3.显示数据
        for (OrderDishes od : list) {

            Vector vt = new Vector();
            vt.add(od.getOdid());
            vt.add(od.getMid());
            vt.add(mbiz.findByMid(od.getMid()).getMname());
            vt.add(od.getOdcount());
            vt.add(od.getOdtime());
//            vt.add(m.getMcount());
            dtm.addRow(vt);
        }
    }

    private void showOnTableCooking(List<OrderDishes> list) {
        //1.获取指定表格（tblMenu）模型
        DefaultTableModel dtm1 = (DefaultTableModel) this.tblCooking.getModel();
        while (dtm1.getRowCount() > 0) {
            dtm1.removeRow(0);
        }
        //3.显示数据
        for (OrderDishes od : list) {

            Vector vt = new Vector();
            vt.add(od.getOdid());
            vt.add(od.getMid());
            vt.add(mbiz.findByMid(od.getMid()).getMname());
            vt.add(od.getOdcount());
            vt.add(od.getOdtime());
//            vt.add(m.getMcount());
            dtm1.addRow(vt);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCook;
    private javax.swing.JButton btnFinish;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private com.view.HomePanel homePanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblMenu;
    private javax.swing.JLabel lblMenu2;
    private javax.swing.JTable tblCooking;
    private javax.swing.JTable tblToCook;
    // End of variables declaration//GEN-END:variables
}
